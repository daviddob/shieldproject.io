#!/bin/bash
set -eu


header() {
	echo "#########################################"
	echo
	echo $*
	echo
	echo "#########################################"
	echo
	echo
}

VERSION=$(cat releases/version)
CURRENT_VERSION=$(cat git/data/releases.json | jq -r .latest)
RELEASE="https://github.com/starkandwayne/shield/releases/tag/$(cat releases/tag)"

if [[ "$CURRENT_VERSION" != "$VERSION" ]]; then
	header "Getting New Release Notes for SHIELD v$VERSION"
	cat releases/body
	(
		cat git/data/releases.json | jq -r '{"all":.all}' | spruce merge -
		echo "- notes: |"
		cat releases/body | sed -e 's/^/    /'
		echo
		echo "  url:     $RELEASE"
		echo "  version: $VERSION"
		echo "latest:  $VERSION"
	) | spruce json | jq -r . > git/data/releases.json.tmp
	mv git/data/releases.json.tmp git/data/releases.json
fi

header "Re-building Website Static Assets"
pushd git
	make
popd

if [[ -n "$(cd ${REPO_ROOT}; git status --porcelain)" ]]; then
	pushd ${REPO_ROOT}

	if [[ -z $(git config --global user.email) ]]; then
		git config --global user.email "ci@starkandwayne.com"
	fi
	if [[ -z $(git config --global user.name) ]]; then
		git config --global user.name "CI Bot"
	fi

	(
	git merge --no-edit ${BRANCH}
	git add -A
	git status
	git commit -m "Updated download page for latest SHIELD release")
	popd
fi
cp -a ${REPO_ROOT} ${REPO_OUT}

echo "DONE"
