#!/bin/bash
set -eu


header() {
	echo "#########################################"
	echo
	echo $*
	echo
	echo "#########################################"
	echo
	echo
}

VERSION=$(cat releases/version)
CURRENT_VERSION=$(cat git/data/releases.json | jq -r .latest)
RELEASE="https://github.com/starkandwayne/shield/releases/tag/$(cat releases/tag)"

if [[ "$CURRENT_VERSION" != "$VERSION" ]]; then
header "Getting New Release Notes for SHIELD v$VERSION"
cat releases/body
(
cat git/data/releases.json | jq -r '{"all":.all}' | spruce merge -
echo "- notes: |"
cat releases/body | sed -e 's/^/    /'
echo
echo "  url:     $RELEASE"
echo "  version: $VERSION"
echo "latest:  $VERSION"
) | spruce json | jq -r . | sponge git/data/releases.json
fi


header "Syncing blog/ syndication from upstream RSS feed"
rm -rf git/data/blog
mkdir -p git/data/blog
cp -a blog/posts/*.json git/data/blog/
ls -lah git/data/blog

header "Syncing docs/ from SHIELD codebase"
rm -rf git/content/documentation
rm -rf git/content/developers
mkdir -p git/content/documentation
mkdir -p git/content/developers
cp -a code/docs/ops/* git/content/documentation
cp -a code/docs/devs/* git/content/developers
ls -lah git/content/documentation
ls -lah git/content/developers

header "Re-building Website Static Assets"
pushd git
	make
popd

if [[ -n "$(cd ${REPO_ROOT}; git status --porcelain)" ]]; then
	pushd ${REPO_ROOT}

	if [[ -z $(git config --global user.email) ]]; then
	git config --global user.email "ci@starkandwayne.com"
	fi
	if [[ -z $(git config --global user.name) ]]; then
	git config --global user.name "CI Bot"
	fi

	(
	git merge --no-edit ${BRANCH}
	git add -A
	git status
	git commit -m "Bumped static files")
	popd
fi
cp -a ${REPO_ROOT} ${REPO_OUT}

echo "DONE"
