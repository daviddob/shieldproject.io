#!/bin/bash
set -eu


header() {
	echo "#########################################"
	echo
	echo $*
	echo
	echo "#########################################"
	echo
	echo
}

VERSION=$(cat releases/version)
RELEASE="https://github.com/starkandwayne/shield/releases/tag/$(cat releases/tag)"

header "Getting Release Notes for SHIELD v$VERSION"
cat releases/body
(
cat git/data/releases.json | \
    jq -r '{"all":.all}' | spruce merge -
echo "- notes: |"
cat releases/body | sed -e 's/^/    /'
echo
echo "  url:     $RELEASE"
echo "  version: $VERSION"
) | spruce json | jq -r .
# FIXME: put releases json SOMEWHERE

header "Syncing docs/ from SHIELD codebase"
cp -a shield-code/docs git/content/docs
ls -lah git/content/docs

header "Downloading hugo" # FIXME: put in starkandwayne/concourse
mkdir hugo
pushd hugo
	curl -LO https://github.com/gohugoio/hugo/releases/download/v0.36/hugo_0.36_Linux-64bit.tar.gz
	tar -xzvf hugo_0.36_Linux-64bit.tar.gz
	chmod 755 hugo
popd
export PATH=$PATH:$PWD/hugo

header "Re-building Website Static Assets"
pushd git
	make
popd

pushd ${REPO_ROOT}

if [[ -z $(git config --global user.email) ]]; then
  git config --global user.email "ci@starkandwayne.com"
fi
if [[ -z $(git config --global user.name) ]]; then
  git config --global user.name "CI Bot"
fi

(cd ${REPO_ROOT}
 git merge --no-edit ${BRANCH}
 git add -A
 git status
 git commit -m "Bumped static files")

cp -a ${REPO_ROOT} ${REPO_OUT}


header "Publishing staging.shieldproject.io"
pushd git
	cf api $CF_API_URL
	cf auth $CF_USERNAME "$CF_PASSWORD"
	cf target -o $CF_ORG -s $CF_SPACE
	cf push -f manifest-stage.yml
popd

echo "DONE"
