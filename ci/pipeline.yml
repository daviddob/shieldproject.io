---
meta:
  github:
    website:
      uri: git@github.com:shieldproject/website
      branch: master
      private_key:  (( vault "secret/pipelines/shared/shield-bot/github:private" ))
      access_token: (( vault "secret/pipelines/shared/shield-bot/github:access_token" ))

    starkandwayne:
      access_token: (( vault "secret/pipelines/shared/shield-bot/github:access_token" ))

  slack:
    webhook: (( vault "secret/slack/botspam:webhook" ))
    channel: '#botspam'
    username:      starkandwayne-ci
    icon:          https://www.starkandwayne.com/assets/images/shield-blue-50x50.png

jobs:
  - name: build
    plan:
      - aggregate:
        - get: changes
          trigger: true
        - get: releases
          trigger: true
      - task: build
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: huntprod/verse
              tag:        latest
          inputs:
            - name: changes
            - name: releases
          outputs:
            - name: pushme
          run:
            path: ./changes/ci/scripts/build
            args: []
          params:
            CF_API_URL:  https://api.run.pivotal.io
            CF_USERNAME: (( vault "secret/pivotal/bot:username" ))
            CF_PASSWORD: (( vault "secret/pivotal/bot:password" ))
            CF_ORG:      starkandwayne
            CF_SPACE:    shieldproject
            REPO_ROOT:   changes
            REPO_OUT:    pushme
            BRANCH:      (( grab meta.github.website.branch ))
        on_failure:
          put: notify
          params:
            channel:  (( grab meta.slack.channel ))
            username: (( grab meta.slack.username ))
            icon_url: (( grab meta.slack.icon ))
            text:     'Failed to build shieldproject.io. <https://pipes.starkandwayne.com/teams/main/pipelines/shieldproject.io|(view details)>'
      - put: code
        params:
          rebase: true
          repository: pushme/changes
  - name: staging
    plan:
      - aggregate:
        -  get: code
           passed: [build]
           trigger: true
      - task: build
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: huntprod/verse
              tag:        latest
          inputs:
            - name: code
          run:
            path: ./code/ci/scripts/stage
            args: []
          params:
            CF_API_URL:  https://api.run.pivotal.io
            CF_USERNAME: (( vault "secret/pivotal/bot:username" ))
            CF_PASSWORD: (( vault "secret/pivotal/bot:password" ))
            CF_ORG:      starkandwayne
            CF_SPACE:    shieldproject
            MANIFEST:    manifest-stage.yml
            REPO_ROOT:   code
        on_failure:
          put: notify
          params:
            channel:  (( grab meta.slack.channel ))
            username: (( grab meta.slack.username ))
            icon_url: (( grab meta.slack.icon ))
            text:     'Failed to deploy the shieldproject.io website to staging. <https://pipes.starkandwayne.com/teams/main/pipelines/shieldproject.io|(view details)>'
        on_success:
          put: notify
          params:
            channel:  (( grab meta.slack.channel ))
            username: (( grab meta.slack.username ))
            icon_url: (( grab meta.slack.icon ))
            text:     'Staged changes at <http://staging.shieldproject.io>.  After review, you can <https://pipes.starkandwayne.com/teams/main/pipelines/shieldproject.io|publish them (to production).>'
  - name: prod
    plan:
      - aggregate:
        - { get: code, passed: [staging] }
      - task: build
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: huntprod/verse
              tag:        latest
          inputs:
            - name: code
          run:
            path: ./code/ci/scripts/stage
            args: []
          params:
            CF_API_URL:  https://api.run.pivotal.io
            CF_USERNAME: (( vault "secret/pivotal/bot:username" ))
            CF_PASSWORD: (( vault "secret/pivotal/bot:password" ))
            CF_ORG:      starkandwayne
            CF_SPACE:    shieldproject
            MANIFEST:    manifest.yml
            REPO_ROOT:   code
        on_failure:
          put: notify
          params:
            channel:  (( grab meta.slack.channel ))
            username: (( grab meta.slack.username ))
            icon_url: (( grab meta.slack.icon ))
            text:     'Failed to deploy the shieldproject.io website to production. <https://pipes.starkandwayne.com/teams/main/pipelines/shieldproject.io|(view details)>'
        on_success:
          put: notify
          params:
            channel:  (( grab meta.slack.channel ))
            username: (( grab meta.slack.username ))
            icon_url: (( grab meta.slack.icon ))
            text:     'Successfully published <http://shieldproject.io>'


resource_types:
- name: slack-notification
  type: docker-image
  source:
    repository: cfcommunity/slack-notification-resource
- name: rss
  type: docker-image
  source:
    repository: starkandwayne/rss-resource




resources:
- name: changes
  type: git
  source:
    uri:         (( grab meta.github.website.uri ))
    branch:      (( grab meta.github.website.branch ))
    private_key: (( grab meta.github.website.private_key ))
    ignore_paths:
      - htdocs

- name: code
  type: git
  source:
    uri:         (( grab meta.github.website.uri ))
    branch:      (( grab meta.github.website.branch ))
    private_key: (( grab meta.github.website.private_key ))

- name: releases
  type: github-release
  source:
    user:         starkandwayne
    repository:   shield
    access_token: (( grab meta.github.starkandwayne.access_token ))

- name: notify
  type: slack-notification
  source:
    url: (( grab meta.slack.webhook ))
