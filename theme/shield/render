#!/usr/bin/perl

use warnings;
use strict;

use Verse qw/verse/;
use Verse::Theme;
use File::Find;
use List::Util qw/max/;
use JSON::PP qw/decode_json/;

dir "{site}";
copy "{theme}/assets/*"  if exist "{theme}/assets";
copy "{root}/content/*"  if exist "{root}/content";

my @blog = reverse
	sort { ($a->{__dated} || 0) cmp ($b->{__dated} || 0) }
	grep { !$_->attrs->{draft} } blog->read_all;
$_->{timestamp} = $_->{__dated} for @blog;

for my $page (page->read_all) {
	render [$page, { articles => [@blog] }],
		using  => $page->attrs->{template} || "page.tt",
		layout => $page->attrs->{layout}   || "page.tt",
		at     => "{site}/".$page->attrs->{url};
}

open my $fh, "<", "data/releases"
	or die "Unable to read data/releases: $!\n";
my $releases = decode_json(do { local $/; <$fh> });
close $fh;

sub v {
	my ($v) = @_;
	my ($maj, $min, $rev) = split /\./, $v;
	return ($maj * 1000 * 1000)
	     + ($min * 1000)
	     +  $rev;
}

$_->{notes} =~ s/^#/###/gm for @{$releases->{all}};
$releases->{all} = [sort { v($b->{version}) cmp v($a->{version}) } @{$releases->{all}}];
render $releases,
	using  => 'download.tt',
	at     => "{site}/download/index.html";

1;
